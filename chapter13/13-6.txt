// Still not coding question.
// 13.6 What is name hiding in C++?

First attempt:
If methods of subclass override methods of the parent class, then the method
name of the parent class got hidded.

Correction: for the method with one function name, but different parameters
, if one of the function is overriden in the subclass, then other functions
in the parent class got hidden.

The answer:
Let us explain through an example. In C++, when you have a class with an
overheaded method, and you then extend and override that method, you must
override all of the overloaded methods.

For example:
    class FirstClass
    {
    public:
    	virtual void MethodA(int);
    	virtual void MethodA(int, int);
    };
    void FirstClass::MethodA(int i)
    {
    	std::cout << "ONE!!\n";
    }
    void FirstClass::MethodA(int i, int j)
    {
    	std::cout << "TWO!!\n";
    }

This is a simple class with two methods (or one overloaded method). If you want
to override the one-parameter version, you can do the following:
    class SecondClass : public FirstClass
    {
    public:
    	void MethodA(int);
    };
    void SecondClass::MethodA(int)
    {
    	std::cout << "THREE!!\n";
    }
    void main()
    {
    	SecondClass a;
    	a.MethodA(1);
    	a.MethodA(1,1);
    }
However, the second call won't work, since the two-parameter MethodA is not
visible. That is name hiding.

